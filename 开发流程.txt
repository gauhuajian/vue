1 路由
下载路由

创建路由目录

创建路由配置文件.js

引入 路由

模块化工程中要安装一下路哟 vue.use

创建实例

导出路由

去 入口文件.js 中 挂载路由
――――――――――――――――――――――――――――――――――――――
2 创建两个组件 login.vue home.vue
步骤
入口 手动
规则
组件 引入组件
出口 App.vue 是所有子组件的根

安装 elementul
引入 mian.js
安装一下 vue.use

――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――

表单
elementul
找到 表单验证 ul 复制粘贴

form 中的属性
:model='ruleForm' 表单中的数据 绑定对象 ruleForm 和表单绑定的数据对象（FuleForm）对象
:rules='rules'效验规则
ref = 'ruleForm' 获取当前这个组件
label-width='150px' 就是 el-form-item label 标签的宽度
el-form-item 表单元素组件


――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――-

跳转 this.\$router.push('/home')
_____________________________________________________
登录问题
 需求 未登录的情况下  如何处理访问了其他页面 （home/user）
	如何判断登录了还是没有登录
如果登录成功了，后台会返回给我们一个 token 令牌
保存到本地
从本地获取 token 令牌 如果能获取到，登录了如果获取不到，未登录
	如果未登录，访问了其他页面，该怎么处理
	login?home?users?(手动)
	全局前置导航守卫(to,from,next) 登录拦截 在路由配置
	处理的具体步骤
	1 判断是否是login页面=>直接访问
	2 不是登录页面 =》 再次判断
	3. 判断是否登录 => 登录了 => 访问
			=>未登录=>跳转login
――――――――――――――――――――――――――――――――――――――
退出
点击退出 弹出 确认框 ul
点击确定 删除token令牌  提升退出成功 跳转回login
点击取消 提升 取消退出

――――――――――――――――――――――――――――――――――――――
左侧栏
找ui组件  导航菜单
	分析
	el-menu 菜单
	属性	
		default-active 高亮
		@open 打开
		@close 关闭
		
	el-submenu 菜单子组件(可展开)
	el-menu-item 菜单元素（最小单位）

菜单路由
el-menu 有个属性router 默认是false 开启 vue-router 路由模式 true
:router='true'
index 的值 作为 path 进行路由跳转
index='/users' ,/roles /rights
___________________________________
创建三个组件 并且显示出来
	users.vue / roles.vue /rights.vue
然后 设置规则
_____________________________________
用户列表
ul 拿 表格 
改造
姓名 邮箱 电话 用户状态 操作

搜索框 ul
slot append 后面 prepend前面 决定 搜索按钮位置

面包屑

 正常列：直接赋值 porp
自定义列：组件/需要处理数据之后才能 赋值